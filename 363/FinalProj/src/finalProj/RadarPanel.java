/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalProj;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import java.util.Random;

/*
 *
 * @author Michael Adams
 */

public class RadarPanel extends javax.swing.JPanel 
{
    boolean doSomething;
    finalProjMain main;
    ScenarioPanel userDefault;
    public RadarPanel(finalProjMain main) 
    {
        initComponents();
        this.main = main;
    }
    
    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    int refreshCounter = 0;
    boolean nearMiss=false;
    int m1x=0;
    int m1y=0;
    int m2x=0;
    int m2y=0;
    boolean hit=false;
    boolean landME=false;
    boolean takeOff =false;
    boolean miss=false;
    int xx=0;
    int xy=0;
    int xz=0;
    int yy=0;
    int tx=0;
    int ty=0;
    int currentState=0;
    
    @Override
    public void paintComponent(Graphics gCode) 
    {
        this.setBackground(Color.BLACK);//David
        
        super.paintComponent(gCode);
        Graphics firstPlane=gCode;
        Graphics planeHit=gCode;
        Graphics secondPlane=gCode;
        //Graphics fourthPlane=gCode;
        Graphics alanding=gCode;
        Graphics aTakeoff=gCode;
        Graphics miss1=gCode;
        Graphics miss2=gCode;
        gCode.setColor(Color.RED);//boundary line of airspace (David)
        gCode.drawOval(200,50,600,600);
        gCode.setColor(Color.GREEN);//David
        //gCode.setColor(Color.BLACK);Michael
        gCode.drawOval(300,150,400,400);

        gCode.drawOval(250,100,500,500);
        gCode.drawOval(350,200,300,300);
        gCode.drawOval(400,250,200,200);
        gCode.drawOval(450,300,100,100);
        //port

        gCode.setColor(Color.GREEN);//David
        //gCode.setColor(Color.BLACK);Michael
        //Left Entrance
        gCode.drawLine(100, 300, 230, 300);
        gCode.drawLine(100, 400, 230, 400);

        //land here -- runway
        gCode.setColor(Color.WHITE);//David
        gCode.drawLine(400, 355, 600, 355);
        gCode.drawLine(400, 335, 600, 335);

        //Right entrance
        gCode.setColor(Color.GREEN);//David
        gCode.drawLine(770, 300, 900, 300);
        gCode.drawLine(770, 400, 900, 400);
                           
        ActionListener listener = new ActionListener() 
        {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) 
            {
                refreshCounter++;
                if (refreshCounter%2==0)
                {
                    currentState++;
                } 
                if (refreshCounter%1==0)
                {
                    repaint();
                }
            }
        };
        Timer time = new Timer(2000, listener);
        time.setDelay(1);//David -- I have no idea what I actually
        //did but the animation went by so stupidly faster than before.
        
        time.start();
        //nearMiss=true;

        if (refreshCounter > 600 && nearMiss == false)
        {
            m1x=500;//starts on left
            m2x=300;
            miss1.setColor(Color.green);
            miss2.setColor(Color.green);
            miss1.fillOval(m1x,500,20,20);
            miss2.fillOval(m2x,510,20,20);
            nearMiss=true;
        }

        if(nearMiss)
        {
            if (refreshCounter%1==0)
            { 
                if (m1x<=m2x+40&&m1x>=m2x)
                {
                    miss1.setColor(Color.orange);
                    miss2.setColor(Color.orange);
                    m1x-=1;
                    m2x+=1; 
                    miss1.fillOval(m1x,500,20,20);
                    miss2.fillOval(m2x,510,20,20);
                } 
                else
                {   
                    miss1.setColor(Color.green);
                    miss2.setColor(Color.green);
                    m1x-=1;
                    m2x+=1;
                    miss1.fillOval(m1x,500,20,20);
                    miss2.fillOval(m2x,510,20,20);
                }
            }
        }
        //end

        //collision

        if (currentState==15)
        {
            //collision
            xx=375;
            xy=560;
            firstPlane.setColor(Color.GREEN);
            firstPlane.fillOval(xx,200,20,20);
            secondPlane.setColor(Color.GREEN);
            secondPlane.fillOval(xy,200,20,20);
            hit=true;
        }
        if (hit)
        {
            if (hit&&refreshCounter%10==0)
            {
                if (xx<xy&&xx+20<xy)
                {
                    xx+=1;xy-=1;
                    firstPlane.setColor(Color.GREEN);
                    secondPlane.setColor(Color.GREEN);
                    firstPlane.fillOval(xx,200,20,20);
                    secondPlane.fillOval(xy,200,20,20);
                }
                else if (xx<xy&&xx+50<=xy)
                { 
                    xx+=1;xy-=1;
                    firstPlane.setColor(Color.ORANGE);
                    firstPlane.setColor(Color.ORANGE);
                    firstPlane.fillOval(xx,200,20,20);
                    secondPlane.fillOval(xy,200,20,20);
                }
            }
            else if (xx>=xy)
            {
                hit=false;
            }
            else
            {     
                if(xx+50<xy&&hit)
                {
                    xx+=1;xy-=1;
                    firstPlane.setColor(Color.GREEN);
                    secondPlane.setColor(Color.GREEN);
                    firstPlane.fillOval(xx,200,20,20);
                    secondPlane.fillOval(xy,200,20,20);
                }
                else
                { 
                    xx+=1;xy-=1;
                    if (xx+50<xy)
                    {
                        firstPlane.setColor(Color.red);
                    }
                    else
                    { 
                        firstPlane.setColor(Color.ORANGE);
                        firstPlane.setColor(Color.ORANGE);
                    }
                    firstPlane.fillOval(xx,200,20,20);
                    secondPlane.fillOval(xy,200,20,20);
                }
            }
        }
        if (refreshCounter>40&&hit==false)
        {
            planeHit.setColor(Color.red);
            planeHit.fillRect(xx,200,20,20);
        }
        //end of collision
         
        //landing
         
        if (refreshCounter==0)
        {
            alanding.setColor(Color.green);
            yy=300;
            xz=100;
            alanding.fillOval(xz, yy, 20, 20);
            landME=true;
        }
        if (landME)
        {
            if (landME&&refreshCounter%2==0)
            {
                if (xz!=500||yy!=335)
                {
                   if (xz!=500)
                   {
                       xz+=2;
                   }
                   if (yy!=335)
                   {
                       yy+=1;
                   }
                   alanding.setColor(Color.green);
                   alanding.fillOval(xz, yy, 20, 20);
                }
            }
            else
            {
                if (xz!=500&&yy!=335)
                {
                    alanding.setColor(Color.green);
                    alanding.fillOval(xz, yy, 20, 20);
                }
                if(xz==500&&yy==335) 
                { 
                    alanding.setColor(Color.white); 
                    landME=false;
                }
            }
        }  
        //takeoff
        if (refreshCounter>=11 && takeOff==false)
        {
           aTakeoff.setColor(Color.green);
           tx=500;
           ty=335;
           alanding.fillOval(tx, ty, 20, 20);
           takeOff=true;
        }
        if (takeOff)
        {
            if (takeOff&&refreshCounter%2==0)
            {
                if (tx!=800||ty!=335)
                {
                    if (tx!=800)
                    {
                        tx+=2;
                    }
                    if (ty!=335)
                    {
                        ty+=1;
                    }
                    aTakeoff.setColor(Color.green);
                    aTakeoff.fillOval(tx, ty, 20, 20);
                }
            }
            else
            {
                if (tx!=800&&ty!=325)
                {
                    alanding.setColor(Color.green);
                    aTakeoff.fillOval(tx, ty, 20, 20);
                }
                if(xz==800&&yy==325)
                { 
                    aTakeoff.setColor(Color.white); 
                    takeOff=false;
                }
            }
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}

